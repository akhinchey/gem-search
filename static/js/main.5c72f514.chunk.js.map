{"version":3,"sources":["store/gemSearchReducer.js","components/StyledComponents.jsx","components/Gem.jsx","components/SavedGemsList.jsx","components/GemResultList.jsx","components/ViewSavedButton.jsx","components/HeaderSearchBar.jsx","components/Error.jsx","components/App.jsx","store/storeConfig.js","index.js"],"names":["gemSearchSlice","createSlice","name","initialState","currentGems","savedGems","currentSearch","reducers","setCurrentGems","state","action","payload","saveGem","newGem","unshift","unsaveGem","gemToUnsave","filter","gem","setCurrentSearch","actions","reducer","GlobalStyle","styles","css","AppHeader","styled","h1","GemUl","ul","HeaderWrapper","header","SearchSection","div","SearchFormWrapper","SearchForm","form","SearchInput","input","ViewSavedLinkSection","MainContent","MainContentHeader","SubHeader","Query","span","GemName","a","GemDescription","p","StyledButton","button","SearchButton","SaveButton","BackLink","Link","Gem","gemNotSaved","handleSave","href","documentation_uri","target","onClick","info","SavedGemsList","dispatch","useDispatch","useSelector","handleUnsaveGem","url","length","to","map","key","GemResultList","gemName","find","ViewSavedButton","HeaderSearchBar","formData","setFormData","handleSubmit","onSubmit","type","value","onChange","e","Error","App","history","useHistory","useState","query","URLSearchParams","useLocation","search","fetchGems","axios","get","then","response","data","catch","error","push","useEffect","location","pathname","preventDefault","alert","path","gemSearchPersistConfig","storage","whitelist","store","configureStore","persistReducer","gemSearchReducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c72f514.chunk.js","sourcesContent":["import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst gemSearchSlice = createSlice({\n  name: 'gemSearch',\n  initialState: {\n    currentGems: [],\n    savedGems: [],\n    currentSearch: null\n  },\n  reducers: {\n    setCurrentGems(state, action) {\n      state.currentGems = action.payload;\n    },\n    saveGem(state, action) {\n      const newGem = action.payload;\n      state.savedGems.unshift(newGem);\n    },\n    unsaveGem(state, action) {\n      const gemToUnsave = action.payload;\n      state.savedGems = state.savedGems.filter(\n        gem => gem.name !== gemToUnsave.name\n      );\n    },\n    setCurrentSearch(state, action) {\n      state.currentSearch = action.payload;\n    }\n  }\n});\n\nconst {\n  actions,\n  reducer\n} = gemSearchSlice;\n\nexport const {\n  saveGem,\n  unsaveGem,\n  setCurrentGems,\n  setCurrentSearch\n} = actions;\n\nexport default reducer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled';\n\nexport const GlobalStyle = () => (\n\t<Global\n\t\tstyles={css`\n\t\t\tbody {\n\t\t\t\tfont-family: 'Quicksand', sans-serif;\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t`}\n\t/>\n);\n\nexport const AppHeader = styled.h1`\n\tdisplay: inline;\n\tcolor: #fff;\n\tfont-weight: 100;\n\t@media (max-width: 720px) {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t}\n\ta {\n\t\tcolor: #fff;\n\t\ttext-decoration: none;\n\t}\n`;\n\nexport const GemUl = styled.ul`\n\tlist-style: none;\n\tpadding: 0;\n\tli {\n\t\tborder-bottom: 1px solid #b0b0b0;\n\t\tmargin-bottom: 20px;\n\n\t\t:first-of-type {\n\t\t\tpadding-top: 30px;\n\t\t}\n\t}\n`;\n\nexport const HeaderWrapper = styled.header`\n\tbackground: rgb(210,92,113);\n\tbackground: linear-gradient(90deg, rgba(210,92,113,1) 26%, rgba(255,198,103,1) 79%);\n\tpadding: 12px;\n\tmargin: 0;\n`;\n\nexport const SearchSection = styled.div`\n\tdisplay: inline;\n\tvertical-align: super;\n`;\n\nexport const SearchFormWrapper = styled.div`\n\tdisplay: inline-block;\n\tpadding-left: 20px;\n\t@media (max-width: 720px) {\n\t\tdisplay: block;\n\t\tpadding-bottom: 20px;\n\t\ttext-align: center;\n\t\tpadding-left: 0;\n\t}\n`;\n\nexport const SearchForm = styled.form`\n\tdisplay: inline;\n\tvertical-align: super;\n`;\n\nexport const SearchInput = styled.input`\n\tpadding: 9px 50px 10px 10px;\n\tborder: 0;\n\tborder-radius: 15px;\n\twidth: 140px;\n\t:focus {\n\t\toutline: none;\n\t}\n\t@media (max-width: 720px) {\n\t\tpadding: 9px 65px 10px 10px;\n\t\twidth: 26%;\n\t\tmargin-right: 1%;\n\t}\n\t@media (max-width: 500px) {\n\t\twidth: 38%;\n\t}\n`;\n\nexport const ViewSavedLinkSection = styled.div`\n\tdisplay: inline;\n\tfloat: right;\n\tpadding-top: 10px;\n\ta {\n\t\tcolor: #fff;\n\t\tfont-weight: 700;\n\t\tbackground: rgba(255, 255, 255, 0.3);\n\t\ttransition: background 0.5s ease-out;\n\t\tpadding: 12px;\n\t\ttext-decoration: none;\n\t\tborder-radius: 20px;\n\t}\n\ta:hover {\n\t\tbackground: rgba(255, 255, 255, 0.5);\n\t}\n\t@media (max-width: 720px) {\n\t\tdisplay: block;\n\t\tfloat: none;\n\t\ttext-align: center;\n\t\tpadding-bottom: 30px;\n\n\t\ta {\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 13px;\n\t\t\tposition: relative;\n\t\t\tright: 0;\n\t\t\ttop: 0;\n\t\t\tmargin-bottom: 20px;\n\t\t}\n\t}\n`;\n\nexport const MainContent = styled.div`\n\twidth: 70%;\n\tmax-width: 1100px;\n\tmargin: auto;\n\tcolor: #999;\n\tfont-size: 11pt;\n\tpadding: 10px 0 50px;\n\ta {\n\t\ttext-decoration: none;\n\t}\n\t@media (max-width: 720px) {\n\t\twidth: 80%;\n\t}\n\t@media (max-width: 500px) {\n\t\twidth: 85%;\n\t}\n`;\n\nexport const MainContentHeader = styled.div`\n\tfont-weight: lighter;\n\tborder-bottom: 1px solid #b0b0b0;\n\tpadding: 20px 0;\n\tfont-size: 1.3em;\n`;\n\nexport const SubHeader = styled.div`\n\tfont-size: 0.8em;\n`;\n\nexport const Query = styled.span`\n\tcolor: #f09722;\n\tfont-size: 1.5em;\n`;\n\nexport const GemName = styled.a`\n\tfont-size: 1.3em;\n\tfont-weight: bold;\n\tdisplay: inline;\n\tcolor: #d25c71;\n`;\n\nexport const GemDescription = styled.p`\n\tpadding-bottom: 10px;\n\tline-height: 1.5;\n`;\n\nconst StyledButton = styled.button`\n\tcolor: #fff;\n\tcursor pointer;\n\tborder: 0;\n\tborder-radius: 15px;\n\tpadding: 8px;\n\t:focus {\n\t\toutline: none;\n\t}\n`;\n\nexport const SearchButton = styled(StyledButton)`\n\tposition: absolute;\n\tleft: 470px;\n\tbackground-color: #f09722;\n\tfont-size: 14px;\n\t@media (max-width: 720px) {\n\t\tleft: 60%;\n\t}\n\t@media (max-width: 500px) {\n\t\tleft: 63%;\n\t}\n`;\n\nexport const SaveButton = styled(StyledButton)`\n\tfloat: right;\n\tpadding: 5px;\n\tbackground-color: #f09722;\n\tborder-radius: 12px;\n\tfont-size: 14px;\n`;\n\nexport const BackLink = styled(Link)`\n\tcolor: #999;\n`;\n","import React from 'react';\nimport { SaveButton } from './StyledComponents';\nimport { GemName, GemDescription } from './StyledComponents';\n\nconst Gem = ({ gem, gemNotSaved, handleSave }) => {\n\treturn (\n\t\t<li>\n\t\t\t<GemName href={gem.documentation_uri} target=\"_blank\">\n        {gem.name}\n      </GemName>\n\t\t\t<SaveButton\n\t\t\t\tonClick={() => {\n\t\t\t\t\thandleSave(gem);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{gemNotSaved ? 'Save' : 'Unsave'} Gem\n\t\t\t</SaveButton>\n\t\t\t<GemDescription>{gem.info}</GemDescription>\n\t\t</li>\n\t);\n};\n\nexport default Gem;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { unsaveGem } from '../store/gemSearchReducer';\nimport Gem from './Gem';\nimport { GemUl, BackLink } from './StyledComponents';\n\nconst SavedGemsList = () => {\n\tconst dispatch = useDispatch();\n\tconst { savedGems, currentGems, currentSearch } = useSelector(state => state);\n\tconst handleUnsaveGem = gem => dispatch(unsaveGem(gem));\n\n\tconst url = currentSearch ? `/search?name=${currentSearch}` : '/';\n\n  return (\n\t\t<>\n\t\t\t{!savedGems.length && (\n\t\t\t\t<div>\n\t\t\t\t\t<p>You currently have no saved gems.</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!!currentGems.length && (\n        <BackLink to={url}>{'<<'} Back To Search Page</BackLink>\n      )}\n\t\t\t<GemUl>\n\t\t\t\t{savedGems.map(gem => (\n\t\t\t\t\t<Gem\n\t\t\t\t\t\tkey={gem.name}\n\t\t\t\t\t\tgem={gem}\n\t\t\t\t\t\tgemNotSaved={false}\n\t\t\t\t\t\thandleSave={handleUnsaveGem}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</GemUl>\n\t\t</>\n\t);\n};\nexport default SavedGemsList;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { saveGem, unsaveGem } from '../store/gemSearchReducer';\nimport Gem from './Gem';\nimport { GemUl, MainContentHeader, SubHeader, Query } from './StyledComponents';\n\nconst GemResultList = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentGems, savedGems, currentSearch } = useSelector(state => state);\n\tconst gemNotSaved = gemName => !savedGems.find(gem => gem.name === gemName);\n\tconst handleSave = gem =>\n\t\tgemNotSaved(gem.name) ? dispatch(saveGem(gem)) : dispatch(unsaveGem(gem));\n\n\treturn (\n\t\t<>\n\t\t\t<MainContentHeader>\n\t\t\t\t<div>\n\t\t\t\t\tSearch for: <Query>{currentSearch}</Query>\n\t\t\t\t</div>\n\t\t\t\t<SubHeader>{currentGems.length} gems found</SubHeader>\n\t\t\t</MainContentHeader>\n\t\t\t<GemUl>\n\t\t\t\t{currentGems.map(gem => (\n\t\t\t\t\t<Gem\n\t\t\t\t\t\tkey={gem.name}\n\t\t\t\t\t\tgem={gem}\n\t\t\t\t\t\tgemNotSaved={gemNotSaved(gem.name)}\n\t\t\t\t\t\thandleSave={handleSave}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</GemUl>\n\t\t</>\n\t);\n};\nexport default GemResultList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ViewSavedLinkSection } from './StyledComponents';\n\nconst ViewSavedButton = () => (\n\t<ViewSavedLinkSection>\n\t\t<Link to='/saved_gems'>View Saved Gems</Link>\n\t</ViewSavedLinkSection>\n);\n\nexport default ViewSavedButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ViewSavedButton from './ViewSavedButton';\nimport {\n\tHeaderWrapper,\n\tSearchSection,\n\tSearchInput,\n\tSearchFormWrapper,\n\tSearchForm,\n\tSearchButton,\n\tAppHeader\n} from './StyledComponents';\n\nconst HeaderSearchBar = ({ formData, setFormData, handleSubmit }) => {\n\tconst handleChange = e => {\n\t\tsetFormData(e.target.value);\n  };\n\n\treturn (\n\t\t<HeaderWrapper>\n\t\t\t<SearchSection>\n\t\t\t\t<AppHeader>\n\t\t\t\t\t<Link onClick={() => setFormData('')} to='/'>Search Ruby Gems</Link>\n\t\t\t\t</AppHeader>\n\t\t\t\t<SearchFormWrapper>\n\t\t\t\t\t<SearchForm onSubmit={handleSubmit}>\n\t\t\t\t\t\t<SearchInput type='text' value={formData} onChange={handleChange} />\n\t\t\t\t\t\t<SearchButton type='submit'>Search</SearchButton>\n\t\t\t\t\t</SearchForm>\n\t\t\t\t</SearchFormWrapper>\n\t\t\t</SearchSection>\n\t\t\t<ViewSavedButton />\n\t\t</HeaderWrapper>\n\t);\n};\n\nexport default HeaderSearchBar;","import React from 'react';\n\nconst Error = () => {\n\treturn <div>Oops, something went wrong. Please try again!</div>;\n};\n\nexport default Error;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport {\n\tSwitch,\n\tRoute,\n\tRedirect,\n\tuseLocation,\n\tuseHistory\n} from 'react-router-dom';\nimport { setCurrentGems, setCurrentSearch } from '../store/gemSearchReducer';\nimport SavedGemsList from './SavedGemsList';\nimport GemResultList from './GemResultList';\nimport HeaderSearchBar from './HeaderSearchBar';\nimport Error from './Error';\nimport { GlobalStyle, MainContent } from './StyledComponents';\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst [formData, setFormData] = useState('');\n\tconst useQuery = () => new URLSearchParams(useLocation().search);\n\tconst query = useQuery();\n\n\tconst fetchGems = gemName => {\n\t\taxios\n\t\t\t.get(`/search.json?query=${gemName}`)\n\t\t\t.then(response => {\n\t\t\t\tdispatch(setCurrentGems(response.data));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\thistory.push('/error');\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tconst name = query.get('name');\n\t\tif (name && history.location.pathname === '/search') {\n\t\t\tfetchGems(name);\n      dispatch(setCurrentSearch(name));\n      setFormData(name);\n\t\t}\n  }, []);\n  \n  useEffect(() => {\n    if (formData === '') dispatch(setCurrentGems([]))\n  }, [formData])\n\n\tconst handleSubmit = e => {\n    e.preventDefault();\n\n    if (formData) {\n      fetchGems(formData);\n      dispatch(setCurrentSearch(formData));\n      history.push(`/search?name=${formData}`);\n    } else {\n      alert('Please enter a valid search.');\n    }\n\t};\n\n\treturn (\n\t\t<>\n      <GlobalStyle />\n\t\t\t<HeaderSearchBar\n\t\t\t\tformData={formData}\n\t\t\t\tsetFormData={setFormData}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\t\t\t<MainContent>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/search'>\n\t\t\t\t\t\t<GemResultList />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/saved_gems'>\n\t\t\t\t\t\t<SavedGemsList />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/error'>\n\t\t\t\t\t\t<Error />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='*'>\n\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</MainContent>\n\t\t</>\n\t);\n};\nexport default App;\n","import {\n  configureStore,\n  getDefaultMiddleware\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer\n} from 'redux-persist';\nimport gemSearchReducer from './gemSearchReducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst gemSearchPersistConfig = {\n  key: 'gemSearch',\n  storage,\n  whitelist: ['savedGems']\n};\n\nconst store = configureStore({\n  reducer: persistReducer(gemSearchPersistConfig, gemSearchReducer),\n  middleware: getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\n\nexport const persistor = persistStore(store)\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport store, { persistor } from './store/storeConfig';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}